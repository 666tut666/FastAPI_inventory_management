postgresql ko data edit
    src:
        https://www.tutorialspoint.com/python_data_access/python_postgresql_update_table.htm


class Staff(Base):
    __tablename__ = "staff"

    id = Column(Integer, primary_key=True, index=True)
        #id should be primary key
    email = Column(String, unique=True, nullable=False, index=True)
        #unique as p_k is already assigned
            #2 ppl can`t have same email
    password = Column(String, nullable=False)
    is_active = Column(Boolean, default=True)


class Borrow(Base):
    __tablename__ = "borrow"




######################################
conftest,py
    code:
        from fastapi.testclient import TestClient
        from sqlalchemy.orm import sessionmaker
        from sqlalchemy import create_engine

        import pytest
        import os
        import sys

        sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
            ##we imported os and sys and gave above command to get the path of main
            ##do it before calling main to let know where it resides


        from main import app
        from database import Base, get_db
        #from config import setting
        #from models import Admin
        #from hashing import Hasher


        SQLALCHEMY_DATABASE_URL = "sqlite:///./test.db"
        engine = create_engine(
            SQLALCHEMY_DATABASE_URL,
            connect_args={"check_same_thread": False}
        )

        TestingSessionLocal = sessionmaker(
            autocommit=False,
            autoflush=False,
            bind=engine
        )   #using sqlite db for testing purposes only

        Base.metadata.create_all(bind=engine)


        @pytest.fixture
        def client():
            def override_get_db():
                try:
                    db = TestingSessionLocal()
                        #created db object
                    yield db
                        #return db
                finally:
                    db.close()

            app.dependency_overrides[get_db] = override_get_db
            client = TestClient(app)
            yield client
                #using yield instead of return
